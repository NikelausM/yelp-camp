<%
/**
* Wrapper class for models to de-couple the database from the views. Works for any database (MongoDB, MySQL, etc.).
*/
ModelInstance = class ModelInstance {
	constructor(model, instance, primaryKey, id, author) {
		this._model = model;
		this._instance = instance;
		this._key = primaryKey;
		this._id = id;
		this._author = author;
	}
	
	get model() {
		return this._model;
	}
	
	set model(model) {
		this._model = model;
	}
	
	get instance() {
		return this._instance;
	}
	
	set instance(instance) {
		this._instance = instance;
	}
	
	get primaryKey() {
		return this._primaryKey;
	}
	
	set primaryKey(primaryKey) {
		this._primaryKey = primaryKey;
	}
	
	get id() {
		return this._id;
	}
	
	set id(id) {
		this._id = id;
	}
	
	get author() {
		return this._author;
	}
	
	set author(author) {
		this._author = author;
	}
	
	/**
	* Used to check if
	*/
	isAuthorized(currentUser) {
		if(!currentUser) {
			return false;
		}
		const isAuthor = this._author._id.equals(currentUser._id);
		return (isAuthor|| currentUser.isAdmin);
	}
}
%>