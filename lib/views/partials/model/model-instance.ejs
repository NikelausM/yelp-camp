<%
/**
* Wrapper class for models to de-couple the database from the views. 
* Works for any database (MongoDB, MySQL, etc.).
* This class is used in the application for campgrounds and comments mostly.
* @author Jose Nicolas Mora
*/
ModelInstance = class ModelInstance {
	
	/**
	* Creates a ModelInstance.
	* @param {string} model - The name of the model used to create the instance (e.g., Campground, User, Comment, etc.).
	* @param {*} instance - The instance of the model.
	* @param {string} primaryKey - The primary key used to identify the model instance (e.g., _id, id, slug, etc.)
	* @param {*} id - The value of the primary key (e.g., "ae34d3", 12451, "clear-water-123", etc.).
	* @param {*} author - The owner of model instance (e.g., User who created it).
	*/
	constructor(model, instance, primaryKey, id, author) {
		this._model = model;
		this._instance = instance;
		this._key = primaryKey;
		this._id = id;
		this._author = author;
	}
	
	/**
	* Returns the model.
	* @return {string} model - The name of the model.
	*/
	get model() {
		return this._model;
	}
	
	/*
	* Sets the model.
	* @param {string} model - The name of the model.
	*/
	set model(model) {
		this._model = model;
	}
	
	/**
	* Returns the model instance.
	* @return {*} - The model instance.
	*/
	get instance() {
		return this._instance;
	}

	/*
	* Sets the model instance.
	* @param {*} model - The model instance.
	*/
	set instance(instance) {
		this._instance = instance;
	}
	
	/**
	* Returns the model primary key.
	* @return {string} primaryKey - The primary key of the model.
	*/
	get primaryKey() {
		return this._primaryKey;
	}

	/*
	* Sets the model primary key.
	* @param {string} primary key - The primary key of the model.
	*/
	set primaryKey(primaryKey) {
		this._primaryKey = primaryKey;
	}
	
	/**
	* Returns the primary key value of the model instance.
	* @return {*} id - The primary key value of the model instance.
	*/
	get id() {
		return this._id;
	}

	/*
	* Sets the primary key value of the model instance.
	* @param {*} id - The primary key value of the model instance.
	*/
	set id(id) {
		this._id = id;
	}
	
	/**
	* Returns the model instance author.
	* @return {*} author - The author of the model instance.
	*/
	get author() {
		return this._author;
	}

	/*
	* Sets the model instance author.
	* @param {*} author - The name of the model.
	*/
	set author(author) {
		this._author = author;
	}
	
	/**
	* Used to check if user is authorized to modify this model instance.
	* @param {*} currentUser - User that is being checked for modification authorization of the model instance.
	* @return {boolean} - True if User has authorization to modify, False otherwise.
	*/
	isAuthorized(currentUser) {
		if(!currentUser) {
			return false;
		}
		const isAuthor = this._author._id.equals(currentUser._id);
		return (isAuthor|| currentUser.isAdmin);
	}
}
%>